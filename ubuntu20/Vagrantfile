
Vagrant.configure("2") do |config|

  # Script em variável
  $script_mysql = <<-SCRIPT
    sudo apt-get update && \
    sudo apt-get install -y mysql-server && \
    mysql -e "create user 'phpuser'@'%' identified by 'pass';"
  SCRIPT

  # Indica o box que será usado:
  config.vm.box = "alvistack/ubuntu-22.04"

  # MÁQUINA ANTIGA MYSQLDB ------------------------------------------------------------------------------
  #config.vm.define "mysqldb" do |mysql| # Bloco do mysql, agora todo o código pertence a ele

    # Port forwarding
    # mysql.vm.network "forwarded_port", guest: 80, host: 8080

    # PRIVATE NETWORK
    # Define um IP em BRIDGE para a máquina:
    # ip: <ip> -> Define IP estático
    # type: "dhcp" -> IP dinâmico
    ### config.vm.network "private_network", type: "dhcp"

    # PUBLIC NETWORK
    #mysql.vm.network "public_network", ip: "192.168.15.70"

    # Shell Provisioner -> Executa comandos de forma automatizada
    #mysql.vm.provision "shell", inline: "cat /configs/idUbuntu.pub >> .ssh/authorized_keys"
    #mysql.vm.provision "shell", inline: $script_mysql

    # Seta configuração do MySQL
    #mysql.vm.provision "shell", inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
    #mysql.vm.provision "shell", inline: "service mysql restart"

    # Synced Folder -> Torna pastas compartilhaveis 
    #mysql.vm.synced_folder "./configs", "/configs"
    #mysql.vm.synced_folder ".", "/vagrant", disable: true

  #end
  # FIM DA MÁQUINA ANTIGA ------------------------------------------------------------------------------

  # Novas máquinas configuradas
  config.vm.define "phpweb" do |phpweb|

    phpweb.vm.network "forwarded_port", guest: 8888, host: 8081
    phpweb.vm.network "public_network", ip: "192.168.15.71", bridge: "Realtek PCIe FE Family Controller"

    phpweb.vm.provision "shell", inline: "apt-get update && apt-get install -y puppet"

    # Puppet apply
    phpweb.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "./configs/manifests"
      puppet.manifest_file = "phpweb.pp"
    end

  end

  config.vm.define "mysqlserver" do |msqs|
    msqs.vm.network "public_network", ip: "192.168.15.72", bridge: "Realtek PCIe FE Family Controller"

    msqs.vm.provision "shell", inline: "cat /vagrant/configs/idUbuntu.pub >> .ssh/authorized_keys"
  end

  config.vm.define "ansible" do |ansible|
    ansible.vm.network "public_network", ip: "192.168.15.73", bridge: "Realtek PCIe FE Family Controller"
    
    ansible.vm.provision "shell", 
      inline: "cp /vagrant/idUbuntu /home/vagrant && \
              chmod 600 /home/vagrant/idUbuntu && \
              chown vagrant:vagrant /home/vagrant/idUbuntu"
    
    ansible.vm.provision "shell",
      inline: "
        apt-get update && \
        python3 -m pip install --user ansible && \
        python3 -m pip install --user ansible-core==2.12.3 && \
        python3 -m pip install --upgrade --user ansible
        "
    
    # Chama o ansible na máquina
    ansible.vm.provision "shell",
      inline:"
      ansible-playbook -i /vagrant/configs/ansible/hosts /vagrant/configs/ansible/playbook.yml
      "
  end
end
